
Models:
> Users (fullname, username, emailAddres)
> Lists (name, date, ref User, listGroups: [ref]) 
 > ListGroups (name, songs: [ref Song])
> Songs (name, tone, author, tag, lyrics, annotations: [ref], singers: [{singer: 'Mica', note: 1}], links: [{name, link}])
 > Annotations (name, segments: [{ label:'estrofa', notes: [ [{note,extencion}] ] }])


[ {1, ['','m','m7','7','maj7','9'] }]


{ note: C, grado: 1}
C  1 <
C# 2  
D  3
D# 4
E  5
F  6 <
F# 7
G  8
G# 9
A  10
A# 11
B  12   

// Función para calcular la diferencia entre dos notas
function calcularDiferencia(notaNueva, notaPrincipal) {
  // Array que representa las notas y sus números asignados
  const notas = {
    'C': 1,
    'C#': 2,
    'D': 3,
    'D#': 4,
    'E': 5,
    'F': 6,
    'F#': 7,
    'G': 8,
    'G#': 9,
    'A': 10,
    'A#': 11,
    'B': 12,
  };

  // Validar que las notas proporcionadas existan en el array
  if (!(notaNueva in notas) || !(notaPrincipal in notas)) {
    console.log('Notas no válidas.');
    return null;
  }

  // Calcular la diferencia restando los números asociados a las notas
  const diferencia = notas[notaNueva] - notas[notaPrincipal];

  // Asegurarse de que la diferencia esté en el rango [1, 12]
  const diferenciaEnRango = (diferencia + 12) % 12 + 1;

  return diferenciaEnRango;
}

// Ejemplo de uso
const notaPrincipal = 'C';
const notaNueva = 'F';
const diferencia = calcularDiferencia(notaNueva, notaPrincipal);

if (diferencia !== null) {
  console.log(`La diferencia entre ${notaPrincipal} y ${notaNueva} es: ${diferencia}`);
}




Front: 
- Boton trash
- (+) para agregar anotaciones
- Agregar botones para editar/visualizar en el listado de las songs
- El translator solo tiene q aparecer en 'watch' y ponerle un label/titulo 'Transportar desde el tono original B'

Tareas:
- Falta integrar deleteNote() CHECK
- Editar labes y eliminarlos CHECK 
- Errores de notas con extensiones CHECK
- Inputs de instrumentos integrar y automatizar CHECK
- Boton Guardar cancion CHECK
- Tonos + menores en selects CHECK
- Cambiar de tonalidades CHECK
- Adevertencia al querer agregar algo vacio en anotaciones CHECK

- list-group manejar el local storage

problema es el loadpost, tengo q cuando se carga ponerla en listGroups lo del form.value.listGroups,
pero tambien cuando vengo del ls ponerlo ahi, por ende, tendria q hacer todo en loadpost????



Vamos a resolver, listGroups (es un array con todos los datos populados... tambien el storage..,  cuando terminemos todos borramos )

- en list-group se crea el dato, y lo guardamos en el storage, un array con un elemento
- volvemos atras y vamos a mostrar lo q ya trae el form mas si hay algo en el storage
- podemos entrar y crear muchas list-groups
- y recien al ultimo cuando guardamos se pasa de un array populado a un array de ids y se borra el storage.

